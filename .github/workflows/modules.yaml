name: Terraform modules

on:
  pull_request:
    branches:
      - main
    paths:
      - modules/**

jobs:
  get-changed-modules:
    name: Get modified modules
    outputs:
      matrix: ${{ steps.filter.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v14.1
        with:
          files: modules/**
      - id: filter
        name: Filter
        run: |
          export modules=`echo ${{ steps.changed-files.outputs.all_changed_and_modified_files }} | tr ' ' '\n' | grep '.tf$' | cut -d '/' -f2 | sort | uniq | jq -c -s --raw-input 'split("\n")[:-1] | {modules: .}'`
          echo "::set-output name=matrix::$(echo "${modules}")"

  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    if: "${{ needs.get-changed-modules.outputs.modules != '{\"modules\": []}' }}"
    needs: get-changed-modules
    strategy:
      matrix: ${{ fromJson(needs.get-changed-modules.outputs.matrix) }}
    defaults:
      run:
        working-directory: ./modules/${{ matrix.modules }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - uses: terraform-linters/setup-tflint@v1
        name: Setup TFLint

      - name: TFLint
        id: tflint
        run: |
          tflint -c ../.tflint.hcl --init
          tflint -c ../.tflint.hcl . > report.txt || status=$?
          REPORT=$(cat report.txt)
          REPORT="${REPORT//'%'/'%25'}"
          REPORT="${REPORT//$'\n'/'%0A'}"
          REPORT="${REPORT//$'\r'/'%0D'}"
          echo "::set-output name=report::$REPORT"
          exit $status
        continue-on-error: true

      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: "Report for module ${{ matrix.modules }}:"

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### Report for module ${{ matrix.modules }}:
            #### Format and Style ðŸ–Œ `${{ steps.fmt.outcome }}`
            #### TFlint ðŸ“– `${{ steps.tflint.outcome }}`
            <details><summary>Show tflint details</summary>

            ```
            ${{ steps.tflint.outputs.report }}
            ```

            </details>
          edit-mode: replace

      - name: Status
        if: steps.tflint.outcome == 'failure'
        run: exit 1
